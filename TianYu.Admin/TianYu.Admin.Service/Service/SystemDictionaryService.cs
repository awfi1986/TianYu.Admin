// <autogenerated>
//   This file was generated by T4 code generator Template.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using TianYu.Admin.Domain;
using TianYu.Admin.Domain.ViewModel.Request;
using TianYu.Admin.Domain.ViewModel.Response;
using TianYu.Admin.Repository.IModelRepository;
using TianYu.Admin.Service.IService;
using TianYu.Core.Common;
using TianYu.Core.Common.BaseEF;
using TianYu.Core.Common.BaseViewModel;

namespace TianYu.Admin.Service.Service
{
    /// <summary> 
	/// 数据字典业务逻辑类
	/// </summary> 
    public class SystemDictionaryService : ISystemDictionaryService
    {
        private readonly ISystemDictionaryRepository _systemDictionaryRepository;
        public SystemDictionaryService(ISystemDictionaryRepository systemDictionaryRepository)
        {
            this._systemDictionaryRepository = systemDictionaryRepository;
        }

        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Insert(AddSystemDictionaryRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            if (requestModel.IsNull())
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.Name.IsNullOrWhiteSpace())
            {
                res.ErrorMessage = "字典名称不能为空";
                return res;
            }
            var entity = _systemDictionaryRepository.FirstOrDefault(x => x.ParentId == requestModel.ParentId && x.Name == requestModel.Name);

            if (entity != null)
            {
                res.ErrorMessage = $"字典名称[{requestModel.Name}]已存在，不能重复添加";
                return res;
            }
            var model = new SystemDictionary()
            {
                Name = requestModel.Name,
                Value = requestModel.Value,
                ParentId = requestModel.ParentId,
                Sort = requestModel.Sort,
                Remark = requestModel.Remark,
                CreateTime = DateTime.Now,
                ModifyTime = DateTime.Now
            };

            _systemDictionaryRepository.Insert(model);
            _systemDictionaryRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Remove(RemoveSystemDictionaryRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            if (requestModel.IsNull())
            {
                res.ErrorMessage = "参数错误";
                return res;
            }

            _systemDictionaryRepository.SqlExecute("delete s_SystemDictionary where Id = @Id or ParentId = @Id", new[] { new SqlParameter("Id", requestModel.Id) });
            _systemDictionaryRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Update(UpdateSystemDictionaryRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            if (requestModel.IsNull())
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.Name.IsNullOrWhiteSpace())
            {
                res.ErrorMessage = "字典名称不能为空";
                return res;
            }
            var entity = _systemDictionaryRepository.FirstOrDefault(x => x.Id == requestModel.Id);

            if (entity == null)
            {
                res.ErrorMessage = "字典不存在或已被删除";
                return res;
            }
            var entity2 = _systemDictionaryRepository.FirstOrDefault(x => x.Id != requestModel.Id && x.ParentId == requestModel.ParentId
            && x.Name == requestModel.Name);

            if (entity2 != null)
            {
                res.ErrorMessage = $"字典名称[{requestModel.Name}]已存在，不能重复添加";
                return res;
            }

            entity.Name = requestModel.Name;
            entity.Value = requestModel.Value;
            entity.Sort = requestModel.Sort;
            entity.Remark = requestModel.Remark;
            entity.ModifyTime = DateTime.Now;

            _systemDictionaryRepository.Update(entity, "Name", "Value", "Sort", "Remark", "ModifyTime");
            _systemDictionaryRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 查询列表
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessPagedBaseViewModel<QuerySystemDictionaryResponseModel> Query(QuerySystemDictionaryRequestModel requestModel)
        {
            var res = new BusinessPagedBaseViewModel<QuerySystemDictionaryResponseModel>() { Status = ResponseStatus.Fail };

            var filter = PredicateBuilder.True<SystemDictionary>();

            filter = filter.And(x => x.ParentId == requestModel.ParentId);

            if (!requestModel.KeyWord.IsNullOrWhiteSpace())
            {
                filter = filter.And(x => x.Name.Contains(requestModel.KeyWord) || x.Value.Contains(requestModel.KeyWord));
            }

            var order = new IOrderByBuilder<SystemDictionary>[]
             {
                new OrderByBuilder<SystemDictionary, int?>(x=>x.Sort, false),
             };

            var query = _systemDictionaryRepository.Find(out int total, requestModel.PageIndex, requestModel.PageSize, filter, order);

            if (query.Any())
            {
                var list = query.MapToList<QuerySystemDictionaryResponseModel>();

                res.BusinessData = list;
            }

            res.Total = total;
            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 查询明细
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<QueryDetailSystemDictionaryResponseModel> QueryDetail(QueryDetailSystemDictionaryRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<QueryDetailSystemDictionaryResponseModel>() { Status = ResponseStatus.Fail };

            var entity = _systemDictionaryRepository.FirstOrDefault(x => x.Id == requestModel.Id);

            if (entity == null)
            {
                res.ErrorMessage = "数据不存在或已被删除";
                return res;
            }
            res.BusinessData = entity.MapTo<QueryDetailSystemDictionaryResponseModel>();
            res.Status = ResponseStatus.Success;
            return res;
        }
    }
}



