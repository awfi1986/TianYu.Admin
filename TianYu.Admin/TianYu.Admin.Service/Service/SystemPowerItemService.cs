// <autogenerated>
//   This file was generated by T4 code generator Template.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System.Linq;
using TianYu.Admin.Domain;
using TianYu.Admin.Domain.ViewModel.Request;
using TianYu.Admin.Domain.ViewModel.Response;
using TianYu.Admin.Repository.IModelRepository;
using TianYu.Admin.Service.IService;
using TianYu.Core.Common;
using TianYu.Core.Common.BaseEF;
using TianYu.Core.Common.BaseViewModel;

namespace TianYu.Admin.Service.Service
{
    /// <summary> 
	/// 权限项业务逻辑类
	/// </summary> 
    public class SystemPowerItemService : ISystemPowerItemService
    {
        private readonly ISystemPowerItemRepository _systemPowerItemRepository;
        public SystemPowerItemService(ISystemPowerItemRepository systemPowerItemRepository)
        {
            this._systemPowerItemRepository = systemPowerItemRepository;
        }

        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Insert(AddSystemPowerItemRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };


            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Remove(RemoveSystemPowerItemRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };


            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Update(UpdateSystemPowerItemRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };


            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 启用禁用
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Enabled(EnabledSystemPowerItemRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            var menuEntity = _systemPowerItemRepository.FirstOrDefault(x => x.Id == requestModel.Id);

            if (menuEntity == null)
            {
                res.ErrorMessage = "菜单不存在或已删除";
                return res;
            }
            menuEntity.Status = requestModel.Status;

            _systemPowerItemRepository.Delete(menuEntity);
            _systemPowerItemRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 查询列表
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessPagedBaseViewModel<QuerySystemPowerItemResponseModel> Query(QuerySystemPowerItemRequestModel requestModel)
        {
            var res = new BusinessPagedBaseViewModel<QuerySystemPowerItemResponseModel>() { Status = ResponseStatus.Fail };
            var filter = PredicateBuilder.True<SystemPowerItem>();

            if (!requestModel.KeyWord.IsNullOrWhiteSpace())
            {
                filter = filter.And(x => x.PowerName.Contains(requestModel.KeyWord));
            }

            var order = new IOrderByBuilder<SystemPowerItem>[]
             {
                new OrderByBuilder<SystemPowerItem, int?>(x=>x.SortCode, false),
             };

            var query = _systemPowerItemRepository.Find(filter, order);

            if (query.Any())
            { 
                res.BusinessData = query.MapToList<QuerySystemPowerItemResponseModel>();
            }
            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 查询明细
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<QueryDetailSystemPowerItemResponseModel> QueryDetail(QueryDetailSystemPowerItemRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<QueryDetailSystemPowerItemResponseModel>() { Status = ResponseStatus.Fail };


            res.Status = ResponseStatus.Success;
            return res;
        }
    }
}



