// <autogenerated>
//   This file was generated by T4 code generator Template.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using TianYu.Admin.Domain;
using TianYu.Admin.Domain.ViewModel.Request;
using TianYu.Admin.Domain.ViewModel.Response;
using TianYu.Admin.Repository.IModelRepository;
using TianYu.Admin.Service.IService;
using TianYu.Core.Common;
using TianYu.Core.Common.BaseEF;
using TianYu.Core.Common.BaseViewModel;

namespace TianYu.Admin.Service.Service
{
    /// <summary> 
	/// 角色权限仓储服务类
	/// </summary> 
    public class SystemRoleRulesService : ISystemRoleRulesService
    {
        private readonly ISystemRoleRulesRepository _systemRoleRulesRepository;
        public SystemRoleRulesService(ISystemRoleRulesRepository systemRoleRulesRepository)
        {
            this._systemRoleRulesRepository = systemRoleRulesRepository;
        }

        /// <summary>
        ///查询角色权限
        /// </summary>
        /// <returns></returns>
        public BusinessBaseViewModel<IList<QuerySystemRoleRulesResponseModel>> Query(QuerySystemRoleRulesRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<IList<QuerySystemRoleRulesResponseModel>>() { Status = ResponseStatus.Fail };

            var filter = PredicateBuilder.True<SystemRoleRules>();

            if (requestModel.RoleId.HasValue)
            {
                filter = filter.And(x => x.RoleId == requestModel.RoleId);
            }

            var query = _systemRoleRulesRepository.Find(filter);

            if (query.Any())
            {
                res.BusinessData = query.MapToList<QuerySystemRoleRulesResponseModel>();
            }
            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 设置角色权限
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> SetSystemRoleRules(SetSystemRoleRulesRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            if (requestModel == null)
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.RoleId <= 0)
            {
                res.ErrorMessage = "角色Id不能为空";
                return res;
            }
            var roleRulesList = new List<SystemRoleRules>();

            if (requestModel.list != null)
            {
                foreach (var m in requestModel.list)
                {
                    roleRulesList.Add(new SystemRoleRules()
                    {
                        ButtonId = m.ButtonId,
                        MenuId = m.MenuId,
                        RoleId = requestModel.RoleId
                    });
                }
            }

            _systemRoleRulesRepository.SqlExecute("delete s_SystemRoleRules where RoleId = @RoleId", new[] { new SqlParameter("RoleId", requestModel.RoleId) });
            if (roleRulesList.Count > 0)
                _systemRoleRulesRepository.Insert(roleRulesList);
            _systemRoleRulesRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
    }
}



