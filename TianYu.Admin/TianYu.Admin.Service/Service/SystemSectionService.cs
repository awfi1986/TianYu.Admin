// <autogenerated>
//   This file was generated by T4 code generator Template.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>


using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using TianYu.Admin.Domain;
using TianYu.Admin.Domain.ViewModel.Request;
using TianYu.Admin.Domain.ViewModel.Response;
using TianYu.Admin.Repository.IModelRepository;
using TianYu.Admin.Service.IService;
using TianYu.Core.Common;
using TianYu.Core.Common.BaseEF;
using TianYu.Core.Common.BaseViewModel;

namespace TianYu.Admin.Service.Service
{
    /// <summary> 
	/// 部门业务逻辑类
	/// </summary> 
    public class SystemSectionService : ISystemSectionService
    {
        private readonly ISystemSectionRepository _systemSectionRepository;
        public SystemSectionService(ISystemSectionRepository systemSectionRepository)
        {
            this._systemSectionRepository = systemSectionRepository;
        }

        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Insert(AddSystemSectionRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            if (requestModel == null)
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.Name.IsNullOrWhiteSpace())
            {
                res.ErrorMessage = "部门名称不能为空";
                return res;
            }
            var entity = _systemSectionRepository.FirstOrDefault(x => x.Name == requestModel.Name && x.ParentId == requestModel.ParentId);

            if (entity != null)
            {
                res.ErrorMessage = "部门名称已存在，不能重复添加";
                return res;
            }
            int level = 1;

            if (requestModel.ParentId > 0)
            {
                level = _systemSectionRepository.FirstOrDefault(x => x.Id == requestModel.ParentId).Level + 1;
            }

            var Code = 0;

            var query = _systemSectionRepository.Find(x => x.ParentCode == requestModel.ParentCode);

            if (query.Any())
            {
                var maxCode = query.Max(x => x.Code);

                //如果不是第一级
                if (requestModel.ParentCode != 0)
                {
                    maxCode = requestModel.ParentCode * 100 + 1;
                }
                maxCode += 1;

                Code = maxCode;
            }
            else
            {
                Code = requestModel.ParentCode * 100 + 1;
            }

            var model = new SystemSection()
            {
                Name = requestModel.Name,
                Person = requestModel.Person,
                ParentId = requestModel.ParentId,
                Code = Code,
                ParentCode = requestModel.ParentCode,
                Enabled = requestModel.Enabled,
                Sort = requestModel.Sort,
                Level = level,
                CreateTime = DateTime.Now,
                ModifyTime = DateTime.Now,
                Remark = requestModel.Remark
            };

            _systemSectionRepository.Insert(model);
            _systemSectionRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Remove(RemoveSystemSectionRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };
            if (requestModel == null)
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.Id <= 0)
            {
                res.ErrorMessage = "部门Id不能为空";
                return res;
            }
            var entity = _systemSectionRepository.FirstOrDefault(x => x.Id == requestModel.Id);

            if (entity == null)
            {
                res.ErrorMessage = "部门不存在或已被删除";
                return res;
            }
            _systemSectionRepository.SqlExecute("delete s_SystemSection where Code like @Code", new[] { new SqlParameter("Code", entity.Code + "%") });
            _systemSectionRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<string> Update(UpdateSystemSectionRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<string>() { Status = ResponseStatus.Fail };

            if (requestModel == null)
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.Name.IsNullOrWhiteSpace())
            {
                res.ErrorMessage = "部门名称不能为空";
                return res;
            }
            if (requestModel.Id <= 0)
            {
                res.ErrorMessage = "部门Id不能为空";
                return res;
            }
            var entity = _systemSectionRepository.FirstOrDefault(x => x.Id != requestModel.Id && x.Name == requestModel.Name && x.ParentId == requestModel.ParentId);
            if (entity != null)
            {
                res.ErrorMessage = "部门名称已存在，不能重复添加";
                return res;
            }

            entity = _systemSectionRepository.FirstOrDefault(x => x.Id == requestModel.Id);

            if (entity == null)
            {
                res.ErrorMessage = "部门不存在或已被删除";
                return res;
            }

            entity.Name = requestModel.Name;
            entity.Person = requestModel.Person; 
            entity.Enabled = requestModel.Enabled;
            entity.Sort = requestModel.Sort;
            entity.ModifyTime = DateTime.Now;
            entity.Remark = requestModel.Remark;


            _systemSectionRepository.Update(entity);
            _systemSectionRepository.SaveChanges();

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 查询列表
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<IList<QuerySystemSectionResponseModel>> Query(QuerySystemSectionRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<IList<QuerySystemSectionResponseModel>>() { Status = ResponseStatus.Fail };

            var filter = PredicateBuilder.True<SystemSection>();

            if (!requestModel.KeyWord.IsNullOrWhiteSpace())
            {
                filter = filter.And(x => x.Name.Contains(requestModel.KeyWord));
            }

            var order = new IOrderByBuilder<SystemSection>[]
             {
                new OrderByBuilder<SystemSection, int>(x=>x.Sort, false),
             };

            var query = _systemSectionRepository.Find(filter, order);

            if (query.Any())
            {
                var list = query.MapToList<QuerySystemSectionResponseModel>();

                res.BusinessData = list;
            }

            res.Status = ResponseStatus.Success;
            return res;
        }
        /// <summary>
        /// 查询明细
        /// </summary>
        /// <param name="requestModel"></param>
        /// <returns></returns>
        public BusinessBaseViewModel<QueryDetailSystemSectionResponseModel> QueryDetail(QueryDetailSystemSectionRequestModel requestModel)
        {
            var res = new BusinessBaseViewModel<QueryDetailSystemSectionResponseModel>() { Status = ResponseStatus.Fail };

            if (requestModel == null)
            {
                res.ErrorMessage = "参数错误";
                return res;
            }
            if (requestModel.Id <= 0)
            {
                res.ErrorMessage = "部门Id不能为空";
                return res;
            }
            var entity = _systemSectionRepository.FirstOrDefault(x => x.Id == requestModel.Id);

            if (entity == null)
            {
                res.ErrorMessage = "部门不存在或已被删除";
                return res;
            }
            res.BusinessData = entity.MapTo<QueryDetailSystemSectionResponseModel>();
            res.Status = ResponseStatus.Success;
            return res;
        }


        public IList<QuerySystemSectionResponseModel> GetSystemSection()
        {
            var res = _systemSectionRepository.Find(x => x.Enabled == true).MapToList<QuerySystemSectionResponseModel>();

            return res;
        }
    }
}



