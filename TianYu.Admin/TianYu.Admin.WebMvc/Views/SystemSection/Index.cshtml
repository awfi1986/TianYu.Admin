@{
    ViewBag.Module = "部门管理";
    ViewBag.Title = "部门管理";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userActions = ViewBag.UserActions as IEnumerable<TianYu.Admin.Domain.ViewModel.SystemButtonRoleViewModel>;
}
@section styles{
    <link href="/Content/layui/lay/extend/treetable.css" rel="stylesheet" />
}

<div class="weadmin-body ">
    <div class="layui-row">
        <form class="layui-form layui-col-md12 we-search">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">部门名称</label>
                    <div class="layui-input-block">
                        <div class="layui-inline">
                            <input name="KeyWord" id="KeyWord" placeholder="部门名称" class="layui-input search-input">
                        </div>
                    </div>
                </div>
                <div class="layui-inline">
                    <button class="layui-btn" lay-submit="" lay-filter="formSearch"><i class="layui-icon">&#xe615;</i></button>
                </div>
            </div>
        </form>
    </div>
    <div class="layui-row">
        <div class="xm">
            <script type="text/html" id="listToolbar2">
                <div class="layui-btn-container">
                    @if (userActions.Any(a => a.ButtonCode == "Insert"))
                    {
                        <a class="layui-btn layui-btn-danger" lay-event="Insert">添加</a>
                    }

                    <button class="layui-btn" lay-event="expand" id="btn-expand">展开 / 折叠</button>
                    <button class="layui-btn" lay-event="refresh" id="btn-refresh">刷新表格</button>
                </div>
            </script>
            <!-- 这里的 显示/隐藏 -->
            <script type="text/html" id="switchTpl">
                <input type="checkbox" name="Enabled" value="{{d.Id}}" lay-skin="switch" lay-text="启用|禁用" lay-filter="switch1" {{ d.Enabled ? 'checked' : '' }}>
            </script>
            <script type="text/html" id="rowToolbar">
                @if (userActions.Any(a => a.ButtonCode == "Insert"))
                {
                    <a class="layui-btn layui-btn-xs" lay-event="Insert">添加子级</a>
                }
                @if (userActions.Any(a => a.ButtonCode == "Update"))
                {
                    <a class="layui-btn layui-btn-xs" lay-event="Update">修改</a>
                }
                @if (userActions.Any(a => a.ButtonCode == "Remove"))
                {
                    <a class="layui-btn layui-btn-xs layui-btn-danger" lay-event="Remove">删除</a>
                }
            </script>
            <table id="listTable" lay-filter="listTable" class="layui-table"></table>
        </div>
    </div>
</div>
@section scripts{
    <script>
     /*使用模块加载的方式 加载文件*/
        layui.extend({
            treetable: '/Content/layui/lay/extend/treetable'
        }).use(['layer', 'table', 'treetable', 'form', 'jquery'], function () {
            var $ = layui.jquery;
            var table = layui.table;
            var layer = layui.layer;
            var treetable = layui.treetable;
            var form = layui.form;

            // 渲染表格
            var renderTable = function (where) {//参考文档：https://gitee.com/whvse/treetable-lay
                layer.load(2);
                treetable.render({
                    toolbar: '#listToolbar2',
                    treeColIndex: 1,//树形图标显示在第几列
                    treeSpid: '0',//最上级的父级id
                    treeIdName: 'Id',//id字段的名称
                    treePidName: 'ParentId',//pid字段的名称
                    treeDefaultClose: false,//是否默认折叠
                    treeLinkage: true,//父级展开时是否自动展开所有子级
                    elem: '#listTable',
                    url: '@Url.Action("Query")', //数据接口
                    where: where,
                    page: false,
                    cols: [[
                        { type: 'numbers', title: '#' }
                        , { field: 'Name', title: '部门名称', width: 260,  align: 'left' }
                        //, { field: 'Code', title: '部门编码', width: 160,  align: 'center' }
                        //, { field: 'Enabled', title: '启用|禁用', width: 100, templet: '#switchTpl', unresize: true }
                        , { field: 'Remark', title: '描述', width: 200, align: 'center' }
                        , { field: 'CreateTime', title: '创建时间', width: 160, align: 'center' }
                        , { field: 'ModifyTime', title: '修改时间', width: 160, align: 'center' }
                        , { templet: '#rowToolbar',  align: 'center', title: '操作' }
                    ]]
                    ,done: function () {
                        layer.closeAll('loading');
                    }
                });
            };

            renderTable();

            //折叠/展开
            var expand = true;

            //按条件搜索数据
            form.on('submit(formSearch)', function (data) {
                renderTable(data.field);
                return false;
            });
            //监听行工具事件
            table.on('tool(listTable)', function (obj) {
                var data = obj.data;
                switch (obj.event) {
                    case 'Insert':
                        var url = "@Url.Action("Add")?pId=" + data.Id + "&pCode=" + data.Code + "&pName=" + data.Name;
                        WeAdminShow("添加部门", url, 450, 420);
                        break;
                    case 'Remove':
                        layer.confirm('你确定删除 [' + data.Name + '] 吗？如果存在下级部门则一并删除，此操作不能撤销！', { icon: 3, title: '提示' }, function (index) {
                            batchDelete(data.Id);
                            layer.close(index);
                        });
                        break;
                    case 'Update':
                        WeAdminShow("编辑", "@Url.Action("Edit")?Id=" + data.Id, 450, 420);
                        break;
                }
            });
            //监听事件
            table.on('toolbar(listTable)', function (obj) {
                switch (obj.event) {
                    case 'Insert':
                        WeAdminShow("添加部门", "@Url.Action("Add")?pId=0&pCode=0&pName=顶级", 450, 420);
                        break;
                    case 'expand':
                        if (expand) {
                            treetable.foldAll('#listTable');
                            expand = false;
                        } else {
                            treetable.expandAll('#listTable');
                            expand = true;
                        }
                        break;
                    case 'refresh': renderTable(); break;
                };
            });
            /*
             * 批量删除数据
             * @@param ids 数据Id集合
             */
            var batchDelete = function (ids) {
                var index = layer.load(2, { time: 60 * 1000 });
                $.ajax({
                    type: 'post',
                    dataType: 'json',
                    url: '@Url.Action("Remove")',
                    data: { Id: ids},
                    success: function (res) {
                        layer.close(index);
                        if (res.Status == 200) {
                            res = res.Data;
                            if (res.Status == 1) {
                                layer.msg("删除成功");
                                renderTable();//重新加载表格数据
                            }
                            else {
                                layer.msg(res.ErrorMessage);
                            }
                        }
                        else {
                            layer.msg('请求错误：' + res.ErrorMessage + '，' + res.Status);
                        }
                    },
                    error: function (res) {
                        layer.close(index);
                        layer.msg("请求出错");
                        console.log(res);
                    }

                });
            };
        });

    </script>
}